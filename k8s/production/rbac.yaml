apiVersion: v1
kind: ServiceAccount
metadata:
  name: fastml-serve
  namespace: {{NAMESPACE}}
  labels:
    app: fastml-serve
    environment: {{ENVIRONMENT}}
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{NAMESPACE}}
  name: fastml-serve-role
  labels:
    app: fastml-serve
    environment: {{ENVIRONMENT}}
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: fastml-serve-rolebinding
  namespace: {{NAMESPACE}}
  labels:
    app: fastml-serve
    environment: {{ENVIRONMENT}}
subjects:
- kind: ServiceAccount
  name: fastml-serve
  namespace: {{NAMESPACE}}
roleRef:
  kind: Role
  name: fastml-serve-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: {{NAMESPACE}}
  labels:
    app: prometheus
    environment: {{ENVIRONMENT}}
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-{{NAMESPACE}}
  labels:
    app: prometheus
    environment: {{ENVIRONMENT}}
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- apiGroups: ["networking.k8s.io"]
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources:
  - deployments
  - replicasets
  - daemonsets
  - statefulsets
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-{{NAMESPACE}}
  labels:
    app: prometheus
    environment: {{ENVIRONMENT}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-{{NAMESPACE}}
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: {{NAMESPACE}}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  namespace: {{NAMESPACE}}
  labels:
    app: grafana
    environment: {{ENVIRONMENT}}
automountServiceAccountToken: false

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{NAMESPACE}}
  name: grafana-role
  labels:
    app: grafana
    environment: {{ENVIRONMENT}}
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: grafana-rolebinding
  namespace: {{NAMESPACE}}
  labels:
    app: grafana
    environment: {{ENVIRONMENT}}
subjects:
- kind: ServiceAccount
  name: grafana
  namespace: {{NAMESPACE}}
roleRef:
  kind: Role
  name: grafana-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: fastml-serve-pdb
  namespace: {{NAMESPACE}}
  labels:
    app: fastml-serve
    environment: {{ENVIRONMENT}}
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: fastml-serve
      component: api

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: fastml-serve-frontend-pdb
  namespace: {{NAMESPACE}}
  labels:
    app: fastml-serve
    component: frontend
    environment: {{ENVIRONMENT}}
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: fastml-serve
      component: frontend

---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: {{NAMESPACE}}-quota
  namespace: {{NAMESPACE}}
  labels:
    environment: {{ENVIRONMENT}}
spec:
  hard:
    requests.cpu: "4"
    requests.memory: "8Gi"
    limits.cpu: "8"
    limits.memory: "16Gi"
    pods: "20"
    services: "10"
    secrets: "20"
    configmaps: "20"
    persistentvolumeclaims: "5"

---
apiVersion: v1
kind: LimitRange
metadata:
  name: {{NAMESPACE}}-limits
  namespace: {{NAMESPACE}}
  labels:
    environment: {{ENVIRONMENT}}
spec:
  limits:
  - default:
      cpu: "1"
      memory: "1Gi"
    defaultRequest:
      cpu: "100m"
      memory: "128Mi"
    type: Container
  - default:
      storage: "1Gi"
    type: PersistentVolumeClaim