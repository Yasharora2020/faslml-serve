apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: {{NAMESPACE}}
  labels:
    app: grafana
    environment: {{ENVIRONMENT}}
data:
  grafana.ini: |
    [server]
    http_port = 3000
    domain = grafana.{{DOMAIN}}
    root_url = https://grafana.{{DOMAIN}}/
    
    [security]
    admin_user = admin
    admin_password = ${GF_SECURITY_ADMIN_PASSWORD}
    cookie_secure = true
    strict_transport_security = true
    
    [users]
    allow_sign_up = false
    auto_assign_org = true
    auto_assign_org_role = Viewer
    
    [auth.anonymous]
    enabled = false
    
    [analytics]
    reporting_enabled = false
    check_for_updates = false
    
    [log]
    mode = console
    level = info
    
    [paths]
    data = /var/lib/grafana
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning

  datasource.yml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus:9090
      isDefault: true
      editable: false
      jsonData:
        timeInterval: "30s"
        queryTimeout: "60s"
        httpMethod: "POST"

  dashboard-provider.yml: |
    apiVersion: 1
    providers:
    - name: 'fastml-dashboards'
      orgId: 1
      folder: 'FastML'
      type: file
      disableDeletion: true
      updateIntervalSeconds: 30
      allowUiUpdates: false
      options:
        path: /var/lib/grafana/dashboards

  fastml-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "FastML Serve - Production Monitoring",
        "tags": ["fastml", "production", "{{ENVIRONMENT}}"],
        "timezone": "UTC",
        "panels": [
          {
            "id": 1,
            "title": "Request Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(rate(requests_total[5m]))",
                "legendFormat": "Requests/sec"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "custom": {"displayMode": "lcd", "orientation": "auto"},
                "mappings": [],
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": null},
                    {"color": "yellow", "value": 50},
                    {"color": "red", "value": 100}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Response Time (95th percentile)",
            "type": "stat",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(request_duration_seconds_bucket[5m]))",
                "legendFormat": "95th percentile"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "custom": {"displayMode": "lcd", "orientation": "auto"},
                "mappings": [],
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": null},
                    {"color": "yellow", "value": 0.5},
                    {"color": "red", "value": 1}
                  ]
                },
                "unit": "s"
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Error Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(rate(requests_total{status=~\"5..\"}[5m])) / sum(rate(requests_total[5m])) * 100",
                "legendFormat": "Error Rate %"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "custom": {"displayMode": "lcd", "orientation": "auto"},
                "mappings": [],
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": null},
                    {"color": "yellow", "value": 1},
                    {"color": "red", "value": 5}
                  ]
                },
                "unit": "percent"
              }
            },
            "gridPos": {"h": 8, "w": 8, "x": 0, "y": 8}
          },
          {
            "id": 4,
            "title": "Predictions per Second",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(rate(predictions_total[5m]))",
                "legendFormat": "Predictions/sec"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "custom": {"displayMode": "lcd", "orientation": "auto"},
                "mappings": [],
                "thresholds": {
                  "steps": [
                    {"color": "green", "value": null},
                    {"color": "yellow", "value": 10},
                    {"color": "red", "value": 50}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 8, "x": 8, "y": 8}
          },
          {
            "id": 5,
            "title": "Active Pods",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(up{job=\"fastml-serve\"})",
                "legendFormat": "Active Pods"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {"mode": "palette-classic"},
                "custom": {"displayMode": "lcd", "orientation": "auto"},
                "mappings": [],
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": null},
                    {"color": "yellow", "value": 1},
                    {"color": "green", "value": 2}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 8, "x": 16, "y": 8}
          },
          {
            "id": 6,
            "title": "Request Rate Over Time",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(requests_total[5m])) by (method, endpoint)",
                "legendFormat": "{{method}} {{endpoint}}"
              }
            ],
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 16}
          },
          {
            "id": 7,
            "title": "CPU Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(container_cpu_usage_seconds_total{pod=~\"fastml-serve-.*\"}[5m])) by (pod) * 100",
                "legendFormat": "{{pod}}"
              }
            ],
            "yAxes": [
              {"unit": "percent", "max": 100}
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 24}
          },
          {
            "id": 8,
            "title": "Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(container_memory_usage_bytes{pod=~\"fastml-serve-.*\"}) by (pod) / 1024 / 1024",
                "legendFormat": "{{pod}}"
              }
            ],
            "yAxes": [
              {"unit": "decbytes"}
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 24}
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "timepicker": {},
        "templating": {"list": []},
        "annotations": {"list": []},
        "refresh": "30s",
        "schemaVersion": 27,
        "version": 1
      }
    }

---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-admin-password
  namespace: {{NAMESPACE}}
  labels:
    app: grafana
    environment: {{ENVIRONMENT}}
type: Opaque
data:
  password: YWRtaW4xMjM= # admin123 base64 encoded - CHANGE IN PRODUCTION!

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: {{NAMESPACE}}
  labels:
    app: grafana
    environment: {{ENVIRONMENT}}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        environment: {{ENVIRONMENT}}
    spec:
      serviceAccountName: grafana
      securityContext:
        runAsNonRoot: true
        runAsUser: 472
        fsGroup: 472
      containers:
      - name: grafana
        image: grafana/grafana:10.1.2
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-admin-password
              key: password
        - name: GF_INSTALL_PLUGINS
          value: "grafana-piechart-panel,grafana-worldmap-panel"
        volumeMounts:
        - name: grafana-config
          mountPath: /etc/grafana/grafana.ini
          subPath: grafana.ini
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources/datasource.yml
          subPath: datasource.yml
        - name: grafana-dashboards-config
          mountPath: /etc/grafana/provisioning/dashboards/dashboard-provider.yml
          subPath: dashboard-provider.yml
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards/fastml-dashboard.json
          subPath: fastml-dashboard.json
        - name: grafana-storage
          mountPath: /var/lib/grafana
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: grafana-config
        configMap:
          name: grafana-config
          items:
          - key: grafana.ini
            path: grafana.ini
      - name: grafana-datasources
        configMap:
          name: grafana-config
          items:
          - key: datasource.yml
            path: datasource.yml
      - name: grafana-dashboards-config
        configMap:
          name: grafana-config
          items:
          - key: dashboard-provider.yml
            path: dashboard-provider.yml
      - name: grafana-dashboards
        configMap:
          name: grafana-config
          items:
          - key: fastml-dashboard.json
            path: fastml-dashboard.json
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-storage

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: {{NAMESPACE}}
  labels:
    app: grafana
    environment: {{ENVIRONMENT}}
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: grafana

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage
  namespace: {{NAMESPACE}}
  labels:
    app: grafana
    environment: {{ENVIRONMENT}}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast-ssd