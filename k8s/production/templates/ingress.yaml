apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fastml-serve-ingress
  namespace: {{NAMESPACE}}
  labels:
    app: fastml-serve
    environment: {{ENVIRONMENT}}
  annotations:
    kubernetes.io/ingress.class: {{INGRESS_CLASS}}
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://{{DOMAIN}}"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range"
spec:
  tls:
  - hosts:
    - {{DOMAIN}}
    - api.{{DOMAIN}}
    secretName: fastml-serve-tls
  rules:
  - host: {{DOMAIN}}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fastml-serve-frontend
            port:
              number: 80
  - host: api.{{DOMAIN}}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fastml-serve
            port:
              number: 8000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: {{NAMESPACE}}
  labels:
    app: grafana
    environment: {{ENVIRONMENT}}
  annotations:
    kubernetes.io/ingress.class: {{INGRESS_CLASS}}
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: grafana-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - Grafana"
spec:
  tls:
  - hosts:
    - grafana.{{DOMAIN}}
    secretName: grafana-tls
  rules:
  - host: grafana.{{DOMAIN}}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus-ingress
  namespace: {{NAMESPACE}}
  labels:
    app: prometheus
    environment: {{ENVIRONMENT}}
  annotations:
    kubernetes.io/ingress.class: {{INGRESS_CLASS}}
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: prometheus-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - Prometheus"
spec:
  tls:
  - hosts:
    - prometheus.{{DOMAIN}}
    secretName: prometheus-tls
  rules:
  - host: prometheus.{{DOMAIN}}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus
            port:
              number: 9090

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: fastml-serve-netpol
  namespace: {{NAMESPACE}}
  labels:
    app: fastml-serve
    environment: {{ENVIRONMENT}}
spec:
  podSelector:
    matchLabels:
      app: fastml-serve
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 80
  - from:
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 8000
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80